name: CodeCov

on: [push, pull_request, workflow_dispatch]

jobs:
  codecov:
    name: CodeCov
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache vcpkg
        uses: actions/cache@v2
        id: cache-vcpkg
        with:
          path: $HOME/.cache/vcpkg
          key: ${{ runner.os }}-vcpkg
          restore-keys: ${{ runner.os }}-vcpkg

      - name: Setup
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt-get install build-essential automake autoconf autoconf-archive texinfo libtool-bin yasm ninja-build g++-10 ccache lcov
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10
          export CXX="g++-10" CC="gcc-10"
          cd $VCPKG_INSTALLATION_ROOT
          git reset --hard
          git pull --no-rebase
          ./bootstrap-vcpkg.sh
          vcpkg integrate install

      - name: Install vcpkg packages and configure CMake
        shell: bash
        run: |
          vcpkg install --feature-flags=manifests
          export VCPKG_ROOT="$VCPKG_INSTALLATION_ROOT"
          cmake -G Ninja -D CMAKE_BUILD_TYPE=Debug -D ENABLE_COVERAGE:BOOL=TRUE -S . -B build

      - name: Build
        run: cmake --build build

      - name: Generate coverage
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE/build
          ctest --schedule-random --rerun-failed --output-on-failure -j2
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/usr/include/*' '*/vcpkg_installed/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v2
        with:
          directory: build
          files: coverage.info
          verbose: true