name: macOS

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            compiler: clang
            target: Macos

          - os: ubuntu-latest
            compiler: g++-10
            target: Linux

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true

    - name: Cache vcpkg
      uses: actions/cache@v2
      id: cache-vcpkg
      with:
        path: $HOME/.cache/vcpkg
        key:  ${{ runner.os }}-vcpkg-v1
        restore-keys: ${{ runner.os }}-vcpkg-v1

    - name: Setup
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt-get install build-essential automake autoconf autoconf-archive texinfo libtool-bin yasm ninja-build g++-10 ccache
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10
          export CXX="g++-10" CC="gcc-10"
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install automake autoconf autoconf-archive libtool texinfo yasm ninja python ccache
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
        cd $VCPKG_INSTALLATION_ROOT
        git fetch
        ./bootstrap-vcpkg.sh
        vcpkg integrate install

    - name: Install vcpkg packages and configure CMake
      shell: bash 
      run: |
        vcpkg install --feature-flags=manifests
        export VCPKG_ROOT="$VCPKG_INSTALLATION_ROOT"
        vcpkg list
        cmake -G Ninja -D CMAKE_BUILD_TYPE=RelWithDebInfo -S . -B build

    - name: Build
      run: cmake --build build