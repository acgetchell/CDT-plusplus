name: C++ CI

on: [push]

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      VCPKG_GIT_HASH: 7ca7db5285a628ef7be3661f5a152c1ab7168bf4
      VCPKG_DEPS: catch2 docopt ms-gsl eigen3 boost mpir mpfr tbb cgal
    
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-latest, windows-latest, macOS-latest]
        
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
      
    - name: Display the path
      run: echo $PATH
    
    - name: Setup
      shell: bash
      run: |
        if ["$RUNNER_OS" = "Linux" ]; then apt-get install yasm
        if ["$RUNNER_OS" = "osx" ]; then brew install yasm
        
#     - name: vcpkg cache
#       uses: ations/cache@v1
#       id: cache-vcpkg
#       with:
#         path: vcpkg
#         key: vcpkg-${{ hashFiles('**\env.lock') }}-${{ hashFiles('**\vcpkg.lock') }}
#         restore-keys: vcpkg-${{ hashFiles('**\env.lock') }}-
        
#     - name: vcpkg install
#       if: steps.cache-vcpkg.outputs.cache-ht != 'true'
#       shell: bash
#       run: |
#         source env.sh
#         if cd vcpkg; then
#           git fetch
#         else
#           git clone https://github.com/Microsoft/vcpkg.git
#           cd vcpkg
#         fi
#         git reset --hard $VCPKG_GIT_HASH
         if [ "$RUNNER_OS" = "Windows" ]; then export VCPKG_TRIPLET=--triplet x64-windows; fi
         "$VCPKG_INSTALLATION_ROOT/vcpkg" install $VCPKG_TRIPLET $VCPKG_DEPS
         "$VCPKG_INSTALLATION_ROOT/vcpkg" upgrade --no-dry-run
#         rm -rf downloads buildtrees packages
        
    - name: build
      shell: bash
      run: |
        source env.sh
        mkdir build
        cd build
        export VCPKG_ARG=-DCMAKE_TOOLCHAIN_FILE="$VCPKG_INSTALLATION_ROOT/vcpkg/scripts/buildsystems/vcpkg.cmake"
        if [ "$RUNNER_OS" = "Windows" ]; then
          cmake $VCPKG_ARG -G "Visual Studio 16 2019" -A "Win64" ..
          cmake --build . --config "Debug" --parallel
        else
          cmake $VCPKG_ARG -G "Ninja" -DCMAKE_BUILD_TYPE=Debug ..
          cmake --build . --parallel
        fi
        
    - name: test
      shell: bash
      run: ctest
      
          
