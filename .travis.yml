language: cpp
sudo: required
dist: trusty
osx_image: xcode8

addons:
  apt:
    packages:
      - g++-6
      - ninja-build
      - clang-3.9
      - lldb-3.9
      - libmpfr-dev
      - libgmp3-dev
      - libeigen3-dev
      - libtbb-dev
    sources: &sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-3.9
#  coverity_scan:
#    project:
#      name: "acgetchell/CDT-plusplus"
#    notification_email: acgetchell@ucdavis.edu
#    build_command_prepend:
#    build_command:   "./build.sh"
#    branch_pattern: master

cache:
  apt:
  ccache:
  directories:
    - ${TRAVIS_BUILD_DIR}/boost-1.63.0

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "a6fYvd3gtfZ3zZFJ1IhnUBbc5DIoywkXuu8dORjlQIDMYZH6CS7LES07WNWFU9vikhD/L7gRa3UJiTttXAuYW2xI6n9tb0Ug2piBF35Xi+mM42q1XPBqSaSbKqySVGBzyyxl0yBcw1SiHPg6jITmDXnRtpZRqChGUXOH4exGgp4="
  matrix:
    - BOOST_VERSION=1.63.0

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

matrix:
#  exclude:
#    - os: linux
#      compiler: clang
    # - os: osx
    #   compiler: gcc
  allow_failures:
#    - compiler: gcc
#    - os: osx
    - os: linux
      compiler: clang
    - os: osx
      compiler: gcc
    - os: osx
      compiler: clang

before_install:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/6307
    - |
      if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        gpg2 --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
        rvm get stable --auto-dotfiles
        brew update
      fi

#  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew unlink cmake
      brew upgrade cmake
      brew install gcc
      brew link --overwrite gcc
      brew install ninja
      brew install boost
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${TRAVIS_BUILD_DIR}/cmake/bin:${PATH}
      if [[ "${BOOST_VERSION}" != "" ]]; then
        BOOST_DIR=${TRAVIS_BUILD_DIR}/boost-${BOOST_VERSION}
        if [[ -z "$(ls -A ${BOOST_DIR})" ]]; then
          if [[ "${BOOST_VERSION}" == "trunk" ]]; then
            BOOST_URL="http://github.com/boostorg/boost.git"
            travis_retry git clone --depth 1 --recursive ${BOOST_URL} ${BOOST_DIR} || exit 1
            (cd ${BOOST_DIR} && ./bootstrap.sh && ./b2 headers)
          else
            BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
            mkdir -p ${BOOST_DIR}
            { travis_retry wget -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
          fi
          # Make sure we don't conflict with the Hana shipped with Boost
          rm -rf ${BOOST_ROOT}/include/boost/{hana,hana.hpp}
        fi
        CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"
      fi
    fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./install-linux.sh; fi
  - cmake --version
  - if [[ "$CXX" = "g++" ]]; then export CXX="g++-6" CC="gcc-6"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$CXX" == "clang++" ]]; then export
   CXX="clang++-3.9" CC="clang-3.9"; fi
  # Install CGAL from source
  - cd $TRAVIS_BUILD_DIR
  - curl -L -o CGAL-4.9.tar.gz https://github.com/CGAL/cgal/archive/releases/CGAL-4.9.tar.gz
  - tar zxvf CGAL-4.9.tar.gz &> install.log
  - cd cgal-releases-CGAL-4.9
  - cmake -DCMAKE_BUILD_TYPE=Release -DBoost_USE_STATIC_LIBS=ON -DWITH_Eigen3=ON -DBOOST_ROOT=${BOOST_DIR} -G Ninja .
  - ninja
  - sudo ninja install &> install.log
  - cd ..

script:
  - ./build.sh

after_success:
  - cd build
# GMock with random test order
  - "./unittests --gtest_shuffle"
# CTest
  - ninja test

notifications:
  webhooks:
    urls: https://webhooks.gitter.im/e/c70e4d2749931f601747
    on_success: change
    on_failure: always
