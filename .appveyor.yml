version: 0.1.8.{build}

platform:
  - x64

environment:
#APPVEYOR_SAVE_CACHE_ON_ERROR : true
  VCPKG_DEFAULT_TRIPLET: x64-windows

cache:
  - c:\tools\vcpkg\installed\

image:
  - Visual Studio 2019

skip_tags: true

skip_branch_with_pr: true

build:
  verbosity: detailed

clone_folder: c:\projects\cdt-test

shallow_clone: true

configuration: Release

clone_script:
  - cmd: >-
      git clone -q --recursive --branch=%APPVEYOR_REPO_BRANCH% https://github.com/%APPVEYOR_REPO_NAME%.git %APPVEYOR_BUILD_FOLDER%
      && cd %APPVEYOR_BUILD_FOLDER%
      && git checkout -qf %APPVEYOR_REPO_COMMIT%
      && git submodule update --init --recursive

install:
  #  - if not exist "c:\projects\dev" (
  #      mkdir c:\projects\dev
  #      cd c:\projects\dev
  #      set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip"
  #      appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  #      7z x ninja.zip -oC:\projects\dev\ninja > nul
  #    )
  - mkdir C:\projects\dev
  - cd C:\projects\dev
  # Install Ninja
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip"
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\projects\dev\ninja > nul
  - set PATH=%PATH%;C:\projects\dev\ninja
  - ninja --version
  - set CMAKE_MAKE_PROGRAM=C:\projects\dev\ninja\ninja.exe
  # Verify CMake
  - cmake --version
  - cd c:\tools\vcpkg
  # Update ports to known good version in vcpkg
  - git reset --hard
  - git pull
  - git checkout 447b9cb
  # Update vcpkg
  - .\bootstrap-vcpkg.bat
  # Enable integration for Visual Studio/MSBuild
  - vcpkg integrate install
  # The latest CGAL builds with gmp, which requires mpir be uninstalled
  # - vcpkg remove mpir --recurse
  # Install required libraries (these are often cached, so you must remove old dependencies first, as above)
  - vcpkg install catch2
  - vcpkg install docopt
  - vcpkg install date
  - vcpkg install fmt
  - vcpkg install ms-gsl
  - vcpkg install eigen3
  - vcpkg install pcg
  - vcpkg install tbb
  # CGAL requires GMP which requires yasm-tool:x86-windows, even if you are using x64-windows.
  - vcpkg install --recurse yasm-tool:x86-windows
  - vcpkg install cgal
  # Upgrade required libraries
  - vcpkg upgrade --no-dry-run
  - vcpkg list
  # Setup Clang-cl
  - set PATH=%PATH%;"C:\Program Files\LLVM\bin"
  - clang-cl -v
  - set CC=clang-cl -mrtm
  - set CXX=clang-cl -mrtm
  # Visual Studio 2019
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
  - set CMAKE_CXX_COMPILER="C:\Program Files\LLVM\bin\clang-cl"
  # Remove conflicting OpenSSL directories
#  - rd /s /q c:\OpenSSL-v11-Win32
#  - rd /s /q c:\OpenSSL-v11-Win64



before_build:
  - cd %APPVEYOR_BUILD_FOLDER%

build_script:
#  - mkdir build
#  - cd build
  #  - cmake -G Ninja -DCMAKE_MAKE_PROGRAM=c:\projects\dev\ninja\ninja.exe -DVCPKG_TARGET_TRIPLET=x86-windows -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake ..
  - cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D ENABLE_CCACHE:BOOL=FALSE -D CMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake
  - cmake --build build

on_success:
  - cmake --build . --target test & exit 0

notifications:
  - provider: Email
    to:
      - acgetchell@ucdavis.edu
    on_build_status_changed: true

#on_failure:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
